import java.util.*;
class  HelloWorld{
    //Optimised Approach
    private static int[] unionOfTwoSortedArrays2(int[]ar1 , int[]ar2)
    {
        int idx1 = 0 , idx2 = 0;
        List<Integer>list = new LinkedList<>();
        while(idx1 < ar1.length && idx2 < ar2.length)
        {
            if(ar1[idx1] <= ar2[idx2])
            {
                if(list.size() == 0 || list.get(list.size()-1) != ar1[idx1])
                list.add(ar1[idx1]);
                idx1++;
            }
            else{
                if(list.size() == 0 || list.get(list.size()-1) != ar2[idx2])
                list.add(ar2[idx2]);
                idx2++;
            }
        }
        while(idx1 < ar1.length){
            if(list.size() == 0 || list.get(list.size()-1) != ar1[idx1])
            list.add(ar1[idx1]);
            idx1++;
        }
        while(idx2 < ar2.length){
            if(list.size() == 0 || list.get(list.size()-1) != ar2[idx2])
            list.add(ar2[idx2]);
            idx2++;
        }
        int[]ar = new int[list.size()];
        int idx = 0;
        for(int ele : list)
        {
            ar[idx++] = ele;
        }
        return ar;
    }
    //BruteForce Approach
    private static int[] unionOfTwoSortedArrays(int[]ar1 , int[]ar2)
    {
        Set<Integer> set = new HashSet<>();
        for(int ele : ar1) set.add(ele);
        for(int ele : ar2) set.add(ele);
        int[]ar = new int[set.size()];
        int idx = 0;
        for(int ele : set) ar[idx++] = ele;
        return ar;
    }
    public static void main(String[] args) {
        int[]ar1 = {1,2,3,4,6};
        int[]ar2 = {2,3,5};
        int[]ar = unionOfTwoSortedArrays2(ar1,ar2);
        System.out.println(Arrays.toString(ar));
    }
}
